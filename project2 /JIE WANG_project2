from datetime import datetime

class Employeedate:

    def __init__(self,name: str,job_title:str,department:str,salary:float,hire_year:str):
        self.name = name
        self.job_title = job_title
        self.department = department
        self.salary = salary
        self.hire_year = hire_year


# return a string representation 
    def __str__(self):
        return f'''Employee Name: {self.name}\nJob Tittle: {self.job_title}\nDepartment: {self.department}\nSalary: $ {float(self.salary):.02f}\nHire Year:  {self.hire_year}''' 
    

 # return the total years employees have worked 
    def total_employee_work_year(self):
        today = datetime.now().year
        return f'{self.name} has worked here {today - int(self.hire_year)} years .'
    
 # return the total salary expense for eath employee
    def total_expense(self):
        total_expense = float(self.salary) * (datetime.now().year - int(self.hire_year))
        return f'The total salary expense for this employee is $ {total_expense:.02f}'


#  Write the employee information to a text file
    def print_employee_information(self):
        f = open('employee_information.txt','w')
        f.write(f'''Employee Name: {self.name}\nJob Title:{self.job_title}\nDepartment:{self.department}\nSarary:{self.salary:.02f}\nHire Year:{self.hire_year}\nTotal Work Year:{self.total_employee_work_year()}\nTotal Expense:{self.total_expense()}''')
                
       
        f.close()

 #   mutator method 
    def set_hire_year(self,other):
        self.hire_year = other
        
    def set_name(self,other):
        self.name = other

    def set_department(self,other):
        self.department = other

    def set_job_title(self,other):
        self.job_title = other
    
    def set_salary(self,other):
        self.salary = other

        #  Accessor method 
    def get_hire_year(self):
        return self.hire_year
    
    def get_name(self):
        return self.name
    
    def get_dapearment(self):
        return self.department
    
    def get_job_title(self):
        return self.job_title
    
    def get_salary(self):
        return self.salary
        

employee1 = Employeedate('Bob','Manager','Sales Department',89900,'2012')
employee2 = Employeedate('David','Developer','Technical Department',70500,'2021')
employee3 = Employeedate('Joe','Consultant','Accounting Department,', 50980,'2019')
employee4 = Employeedate('Susan', 'Sales', 'Sales Department', 60000, '2018')
    
print(employee1)
print(employee1.total_employee_work_year())
print(employee1.total_expense())

employee1.print_employee_information()

#print mutator method 
# employee1.set_hire_year('2016')
# print(employee1)

# employee1.set_name('Dana')
# print(employee1)

# employee1.set_department('Technical Deoartment')
# print(employee1)

# employee1.set_job_title('Sales')
# print(employee1)

# employee1.set_salary(70500)
# print(employee1)

# #print Accessor method 
# print(employee1.get_hire_year())

# print(employee1.get_name())

# print(employee1.get_dapearment())
# print(employee1.get_job_title())
# print(employee1.get_salary())

# print(employee2)
# print(employee2.total_employee_work_year())
